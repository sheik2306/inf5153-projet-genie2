@startuml
title **Centralized Medical Document** (Structure)
center footer CMD - class diagram
package api {

    package api.repositories {
        interface JPARepository {
            save(model)
            findAll()
            edit(model)
            FindById(model)
        }


    }

package api.daos {
    abstract CrudSQLDAO<T> {
            save(<T> model) : <T>
            findAll() : List<T>
            edit(<T> model) 
            FindById(<T> model) : <T>

    }
    class UserDAO {
            
        }
    class VisitDAO { 

    }

    class DocumentDAO {

    }

    class AntecedantDAO {

    }
    class AddressDAO {

    }
    class ArchiveDAO {

    }
}

    package api.models { 
        class Address {
        - civicNo : Integer
        - street_city : String
        - province : String
        - country : String
        - postalCode : String
        }

        class DocumentHistory  {
        - document : Document
        - dateModification : Date
        }

        class Archive {
        -  documentHistory : List<DocumentHistory>
        }
        
        enum Establishment {
        MEDICAL_CENTER_LAVAL,
        MEDICAL_CENTER_MTL,
        MEDICAL_CENTER_TERREBONNE,
        }
        

        abstract User { 
           - userName : String
            - medicalCard : String
            - password : String
           + this( medicalCard : String, password : String)
        }
            class Doctor extends User {

        }

        class Patient extends User {

        }
        class HealthProfessional extends User {

        }
        class Document {
        - patient : Patient
        - medicalCard : String 
        - antecedents : List<Antecedent> 
        - visits: List<Visit> 
        - treatingDoctors : List<Doctor> 
            
        }

        class Visit { 
            - civicNo : Integer
            - street_city : String
            - province : String
            - country : String
            - postalCode : String
        }

        class Antecedant {
          - diagnostic : String
        - treatment : String
        - doctor : Doctor
        - sicknessStart : Date
        - sicknessEnd : Date
        }

        class Patient { 
               - address : Address 
                - firstName : String
                - lastName : String
                - dateOfBirth : Date
                - insuranceCard : String
                - phoneNumber : String
        }
    }
     package api.iServices {
        interface IServices<T> {
            + add(t: T)
            + T get() 
            + edit(user : User)
            + Delete(user : User)
        }
        abstract Services<T> extends IServices{ 
            abstractDAO CrudSQLDAO
            --
            + add(t: <T>)
            + T get() 
            + edit(t : <T>)
            + Delete(t : <T>)
        }
    }

      package api.controllers { 
        class UserController {

        }

        class AntecedantController { 

        }

        class VisitController { 

        }

        class DocumentController {

        }
        class ArchiveController {

        }
        class AddressController {

        }
    }
    package api.servicesImpl {
        class UserServices {
         
        }

        class VisitServices {

        }

        class DocumentServices {

        }

        class AntecedantServices { 

        }
        class ArchiveServices { 

        }
        class AddressServices {

        }
    }
    
    Services <-left- UserServices
    Services --> CrudSQLDAO
    UserController --> UserServices  
  
    
    CrudSQLDAO -right-> JPARepository
    



    
    Document "1" *-down-> "*" Antecedant
    Visit "*" <-down-  "1" Document
    Patient "1" <-up- "1" Document
    Establishment "1" -up- "1" Visit
    Document "1" <--* "1" DocumentHistory
    DocumentHistory "*" <--o "1" Archive
    Patient "1" -down-> "1" Address

    DocumentServices -> Services
    VisitServices -> Services
    AntecedantServices -> Services
    ArchiveServices -> Services 
    AddressServices -> Services


    AntecedantController -> AntecedantServices
    VisitController -> VisitServices
    DocumentController -> DocumentServices
    AddressController -> AddressServices
    ArchiveController -> ArchiveServices


    UserDAO -right- User
    DocumentDAO -down- Document
    AntecedantDAO -down- Antecedant
    VisitDAO -down- Visit
    AddressDAO -down- Address
    ArchiveDAO -down- Archive

    VisitDAO -right-|> CrudSQLDAO 
    UserDAO -right-|> CrudSQLDAO 
    AddressDAO -right-|> CrudSQLDAO
    ArchiveDAO -right-|> CrudSQLDAO
    
    DocumentDAO -right-|> CrudSQLDAO 
    AntecedantDAO -right-|> CrudSQLDAO 




}
@enduml